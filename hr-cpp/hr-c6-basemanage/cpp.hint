// 提示文件帮助 Visual Studio IDE 解释 Visual C++ 标识符,
// 如函数和宏的名称。
// 有关详细信息，请参见 https://go.microsoft.com/fwlink/?linkid=865984
#define ENDPOINT
#define API_HANDLER_RESP_VO(__VO__) return createDtoResponse(Status::CODE_200, __VO__)
#define API_ACCESS_DECLARE(__CLASS__) public: __CLASS__(OATPP_COMPONENT(std::shared_ptr<ObjectMapper>, objectMapper)) : oatpp::web::server::api::ApiController(objectMapper) { setDefaultAuthorizationHandler(std::make_shared<CustomerAuthorizeHandler>()); } static std::shared_ptr<__CLASS__> createShared(OATPP_COMPONENT(std::shared_ptr<ObjectMapper>, objectMapper)) { return std::make_shared<__CLASS__>(objectMapper); }
#define ZH_WORDS_GETTER(_KEY_) YamlHelper().getString(&(ServerInfo::getInstance().getZhDictNode()), _KEY_)
#define API_HANDLER_QUERY_PARAM(__VAR__, __TYPE__, __PARAMS__) auto __VAR__ = __TYPE__::createShared(); for (auto& param : __PARAMS__.getAll()) { auto data = param.second.getMemoryHandle().get(); auto typeval = __VAR__[param.first.toString()].getValueType(); if (typeval == oatpp::data::mapping::type::__class::String::getType()) __VAR__[param.first.toString()] = oatpp::String(URIUtil::urlDecode(data->c_str())); else if (typeval == oatpp::data::mapping::type::__class::Int32::getType()) __VAR__[param.first.toString()] = oatpp::Int32(stoi(*data)); else if (typeval == oatpp::data::mapping::type::__class::UInt32::getType()) __VAR__[param.first.toString()] = oatpp::UInt32(stoi(*data)); else if (typeval == oatpp::data::mapping::type::__class::Int64::getType()) __VAR__[param.first.toString()] = oatpp::Int64(stoll(*data)); else if (typeval == oatpp::data::mapping::type::__class::UInt64::getType()) __VAR__[param.first.toString()] = oatpp::UInt64(stoull(*data)); else if (typeval == oatpp::data::mapping::type::__class::Float32::getType()) __VAR__[param.first.toString()] = oatpp::Float32(stof(*data)); else if (typeval == oatpp::data::mapping::type::__class::Float64::getType()) __VAR__[param.first.toString()] = oatpp::Float64(stod(*data)); else if (typeval == oatpp::data::mapping::type::__class::Boolean::getType()) __VAR__[param.first.toString()] = oatpp::Boolean(*data == "true" || stoi(*data) == 1); }
